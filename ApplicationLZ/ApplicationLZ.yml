trigger:
  branches:
    include:
    - main
    - master

parameters:
  - name: Layer
    type: string
    #default: "nprod"
    values:
    - dev
    - nprod
    - prod   
    
  #- name: Environment
    #type: string
    #default: ""
    #values:
    #- Development
    #- NonProduction
    #- Production
  - name: removeDeployment
    displayName: Remove resources post-deployment ?
    type: boolean
    default: false

variables:
  - template: variables.yml


stages:
- stage: ${{parameters.Layer}}_Plan_and_BackendCreation
  jobs:
  - template: ./Pipelines/plan.yml
    parameters:
      vmImage: '$(vmImage)'
      poolName: '$(poolName)'
      Layer: ${{parameters.Layer}}
      projectid: $(projectid)

- stage: ${{parameters.Layer}}_Apply
  jobs:   
    - deployment:
      environment: ${{parameters.layer}}
      displayName: Apply TF changes for ${{parameters.Layer}}
      variables: 
        - template: ./Variables/variables.${{ parameters.Layer }}.yml
      pool:
        vmImage: '$(vmImage)'
      strategy:
        runOnce:
          deploy:
            steps:
              - template: ./Pipelines/apply.yml
                parameters:
                  Layer: ${{parameters.Layer}}
                  projectid: $(projectid)
  dependsOn: ${{parameters.Layer}}_Plan_and_BackendCreation

- stage: ${{parameters.Layer}}_Destroy
  jobs:    
    - deployment:
      condition: and(succeededOrFailed(), eq( '${{ parameters.removeDeployment }}', 'true'))
      environment: ${{parameters.Layer}}
      displayName: Destroy TF changes for ${{parameters.Layer}}
      variables: 
        - template: ./Variables/variables.${{ parameters.Layer }}.yml
      pool:
        vmImage: '$(vmImage)'
      strategy:
        runOnce:
          deploy:
            steps:
              - template: ./Pipelines/destroy.yml
                parameters:
                  Layer: ${{parameters.Layer}}
                  projectid: $(projectid)
  dependsOn: ${{parameters.Layer}}_Apply